version: "3"

services:
    vaultwarden:
        image: vaultwarden/server:latest
        container_name: vaultwarden
        restart: always
        volumes:
            - ./vw-data:/data
        env_file:
            - .env
        environment:
            - DATA_FOLDER=data
            - WEBSOCKET_ENABLED=true
            - DOMAIN=https://${DOMAIN}
            - SMTP_FROM_NAME=Vaultwarden - ${DOMAIN}
            - LOG_FILE=/data/vaultwarden.log

    caddy:
        image: caddy:2
        container_name: caddy
        restart: always
        ports:
            - 80:80 # Needed for the ACME HTTP-01 challenge.
            - 443:443
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - ./caddy-config:/config
            - ./caddy-data:/data
        environment:
            - LOG_FILE=/data/access.log
            - DOMAIN
            - EMAIL
            - TZ

    fail2ban:
        container_name: fail2ban
        restart: always
        depends_on:
            - vaultwarden
        image: crazymax/fail2ban:latest
        environment:
            - F2B_DB_PURGE_AGE=30d
            - F2B_LOG_TARGET=/data/fail2ban.log
            - F2B_LOG_LEVEL=INFO
            - F2B_IPTABLES_CHAIN=INPUT
            - SSMTP_HOST=${SMTP_HOST}
            - SSMTP_HOSTNAME=Vaultwarden - ${DOMAIN}
            - SSMTP_PORT=${SMTP_PORT}
            - SSMTP_USER=${SMTP_USERNAME}
            - SSMTP_PASSWORD=${SMTP_PASSWORD}
            - SSMTP_STARTTLS=YES
            - SSMTP_TLS
            - TZ
        volumes:
            - ./fail2ban:/data
            - ./vw-data:/vw-data:ro
        network_mode: "host"
        privileged: true
        cap_add:
            - NET_ADMIN
            - NET_RAW

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_SCHEDULE
            - TZ
